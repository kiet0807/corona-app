{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kiet Nguyen\\\\Desktop\\\\corona-app\\\\components\\\\Selection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text } from \"theme-ui\";\n\nvar Selection = function Selection(_ref) {\n  _s();\n\n  var items = _ref.items,\n      onClick = _ref.onClick,\n      selectedItem = _ref.selectedItem;\n\n  var _useState = useState(selectedItem !== null && selectedItem !== void 0 ? selectedItem : items[0]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    if (onClick) onClick(selected.value);\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"white\",\n    mx: 15,\n    p: \"5px\",\n    sx: {\n      height: 50,\n      borderRadius: 25,\n      width: \"100%\",\n      boxShadow: \"rgb(0 0 0 / 5%) 1px 8px 8px 1px\"\n    },\n    children: items.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        onClick: function onClick() {\n          setSelected(item);\n        },\n        bg: selected === item ? \"chelseaCucumber18\" : \"white\",\n        sx: {\n          borderRadius: 25,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          sx: {\n            fontWeight: selected === item ? \"700\" : \"body\",\n            fontSize: 15,\n            lineHeight: 20\n          },\n          color: selected === item ? \"chelseaCucumber\" : \"mistGray\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Selection, \"m5iPhxNPtTiUEkh8HWAaXz9G9k8=\");\n\n_c = Selection;\nexport default Selection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selection\");","map":{"version":3,"sources":["C:/Users/Kiet Nguyen/Desktop/corona-app/components/Selection.tsx"],"names":["React","useState","useEffect","Flex","Text","Selection","items","onClick","selectedItem","selected","setSelected","value","height","borderRadius","width","boxShadow","map","item","flex","justifyContent","alignItems","cursor","fontWeight","fontSize","lineHeight","label","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;;AAcA,IAAMC,SAA6B,GAAG,SAAhCA,SAAgC,OAAsC;AAAA;;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBAC1CP,QAAQ,CAAYO,YAAZ,aAAYA,YAAZ,cAAYA,YAAZ,GAA4BF,KAAK,CAAC,CAAD,CAAjC,CADkC;AAAA,MACnEG,QADmE;AAAA,MACzDC,WADyD;;AAE1ER,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,OAAJ,EAAaA,OAAO,CAACE,QAAQ,CAACE,KAAV,CAAP;AACd,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAGA,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,CAAC,EAAC,KAHJ;AAIE,IAAA,EAAE,EAAE;AACFG,MAAAA,MAAM,EAAE,EADN;AAEFC,MAAAA,YAAY,EAAE,EAFZ;AAGFC,MAAAA,KAAK,EAAE,MAHL;AAIFC,MAAAA,SAAS,EAAE;AAJT,KAJN;AAAA,cAWGT,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT,QAAC,IAAD;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbP,UAAAA,WAAW,CAACO,IAAD,CAAX;AACD,SAJH;AAKE,QAAA,EAAE,EAAER,QAAQ,KAAKQ,IAAb,GAAoB,mBAApB,GAA0C,OALhD;AAME,QAAA,EAAE,EAAE;AACFJ,UAAAA,YAAY,EAAE,EADZ;AAEFK,UAAAA,IAAI,EAAE,CAFJ;AAGFC,UAAAA,cAAc,EAAE,QAHd;AAIFC,UAAAA,UAAU,EAAE,QAJV;AAKFC,UAAAA,MAAM,EAAE;AALN,SANN;AAAA,+BAcE,QAAC,IAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,UAAU,EAAEb,QAAQ,KAAKQ,IAAb,GAAoB,KAApB,GAA4B,MADtC;AAEFM,YAAAA,QAAQ,EAAE,EAFR;AAGFC,YAAAA,UAAU,EAAE;AAHV,WADN;AAME,UAAA,KAAK,EAAEf,QAAQ,KAAKQ,IAAb,GAAoB,iBAApB,GAAwC,UANjD;AAAA,oBAQGA,IAAI,CAACQ;AARR;AAAA;AAAA;AAAA;AAAA;AAdF,SACOR,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AAXH;AAAA;AAAA;AAAA;AAAA,WADF;AAyCD,CA9CD;;GAAMrB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport { Flex, Text } from \"theme-ui\";\r\n\r\ninterface ItemProps {\r\n  id: string | number;\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface SelectionProps {\r\n  items: ItemProps[];\r\n  onClick?: (value: string) => void;\r\n  selectedItem?: ItemProps;\r\n}\r\n\r\nconst Selection: FC<SelectionProps> = ({ items, onClick, selectedItem }) => {\r\n  const [selected, setSelected] = useState<ItemProps>(selectedItem ?? items[0]);\r\n  useEffect(() => {\r\n    if (onClick) onClick(selected.value);\r\n  }, [selected]);\r\n  return (\r\n    <Flex\r\n      bg=\"white\"\r\n      mx={15}\r\n      p=\"5px\"\r\n      sx={{\r\n        height: 50,\r\n        borderRadius: 25,\r\n        width: \"100%\",\r\n        boxShadow: \"rgb(0 0 0 / 5%) 1px 8px 8px 1px\",\r\n      }}\r\n    >\r\n      {items.map((item) => (\r\n        <Flex\r\n          key={item.id}\r\n          onClick={() => {\r\n            setSelected(item);\r\n          }}\r\n          bg={selected === item ? \"chelseaCucumber18\" : \"white\"}\r\n          sx={{\r\n            borderRadius: 25,\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <Text\r\n            sx={{\r\n              fontWeight: selected === item ? \"700\" : \"body\",\r\n              fontSize: 15,\r\n              lineHeight: 20,\r\n            }}\r\n            color={selected === item ? \"chelseaCucumber\" : \"mistGray\"}\r\n          >\r\n            {item.label}\r\n          </Text>\r\n        </Flex>\r\n      ))}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n"]},"metadata":{},"sourceType":"module"}