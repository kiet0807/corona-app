{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kiet Nguyen\\\\Desktop\\\\corona-app\\\\components\\\\Selection.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Text } from 'theme-ui';\n\nconst Selection = ({\n  items,\n  onClick,\n  selectedItem\n}) => {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(selectedItem !== null && selectedItem !== void 0 ? selectedItem : items[0]);\n  useEffect(() => {\n    if (onClick) onClick(selected.value);\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"white\",\n    mx: 15,\n    mb: 20,\n    p: \"5px\",\n    sx: {\n      height: 50,\n      borderRadius: 25\n    },\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Flex, {\n      onClick: () => {\n        setSelected(item);\n      },\n      bg: selected === item ? 'chelseaCucumber18' : 'white',\n      sx: {\n        borderRadius: 25,\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        sx: {\n          fontWeight: selected === item ? 'heading' : 'body',\n          fontSize: 15,\n          lineHeight: 20\n        },\n        color: selected === item ? 'chelseaCucumber' : 'mistGray',\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Selection;","map":{"version":3,"sources":["C:/Users/Kiet Nguyen/Desktop/corona-app/components/Selection.tsx"],"names":["React","useState","useEffect","Flex","Text","Selection","items","onClick","selectedItem","selected","setSelected","value","height","borderRadius","map","item","flex","justifyContent","alignItems","cursor","fontWeight","fontSize","lineHeight","label","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,UAAzB;;AAcA,MAAMC,SAA8B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AACvE,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAcO,YAAd,aAAcA,YAAd,cAAcA,YAAd,GAA6BF,KAAK,CAAC,CAAD,CAAlC,CAAxC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,OAAJ,EACIA,OAAO,CAACE,QAAQ,CAACE,KAAV,CAAP;AACP,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAIA,sBACI,QAAC,IAAD;AACI,IAAA,EAAE,EAAG,OADT;AAEI,IAAA,EAAE,EAAI,EAFV;AAGI,IAAA,EAAE,EAAI,EAHV;AAII,IAAA,CAAC,EAAG,KAJR;AAKI,IAAA,EAAE,EAAI;AAAEG,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,YAAY,EAAE;AAA5B,KALV;AAAA,cAOKP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAEI,MAAA,OAAO,EAAI,MAAM;AACbL,QAAAA,WAAW,CAACK,IAAD,CAAX;AACH,OAJL;AAKI,MAAA,EAAE,EAAIN,QAAQ,KAAKM,IAAb,GAAkB,mBAAlB,GAAsC,OALhD;AAMI,MAAA,EAAE,EAAI;AACFF,QAAAA,YAAY,EAAE,EADZ;AAEFG,QAAAA,IAAI,EAAE,CAFJ;AAGFC,QAAAA,cAAc,EAAE,QAHd;AAIFC,QAAAA,UAAU,EAAE,QAJV;AAKFC,QAAAA,MAAM,EAAE;AALN,OANV;AAAA,6BAcI,QAAC,IAAD;AACA,QAAA,EAAE,EAAI;AACFC,UAAAA,UAAU,EAAEX,QAAQ,KAAKM,IAAb,GAAmB,SAAnB,GAA8B,MADxC;AAEFM,UAAAA,QAAQ,EAAE,EAFR;AAGFC,UAAAA,UAAU,EAAE;AAHV,SADN;AAMA,QAAA,KAAK,EAAIb,QAAQ,KAAKM,IAAb,GAAmB,iBAAnB,GAAsC,UAN/C;AAAA,kBAQKA,IAAI,CAACQ;AARV;AAAA;AAAA;AAAA;AAAA;AAdJ,OACWR,IAAI,CAACS,EADhB;AAAA;AAAA;AAAA;AAAA,YADH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CA3CD;;AA6CA,eAAenB,SAAf","sourcesContent":["import React, {FC, useState, useEffect} from 'react'\r\nimport {Flex, Text} from 'theme-ui'\r\n\r\ninterface ItemProps {\r\n    id: string | number,\r\n    label: string,\r\n    value: string\r\n}\r\n\r\ninterface SelectionProps {\r\n    items: ItemProps[]\r\n    onClick?: (value: string) => void,\r\n    selectedItem?: ItemProps\r\n}\r\n\r\nconst Selection: FC <SelectionProps> = ({items, onClick, selectedItem}) => {\r\n    const [selected, setSelected] = useState <ItemProps> (selectedItem?? items[0]);\r\n    useEffect(() => {\r\n        if (onClick)\r\n            onClick(selected.value)\r\n    }, [selected])\r\n    return (\r\n        <Flex\r\n            bg = 'white'\r\n            mx = {15}\r\n            mb = {20}\r\n            p = '5px'\r\n            sx = {{ height: 50, borderRadius: 25 }}\r\n        >\r\n            {items.map(item =>\r\n                <Flex\r\n                    key = {item.id}\r\n                    onClick = {() => {\r\n                        setSelected(item);  \r\n                    }}\r\n                    bg = {selected === item?'chelseaCucumber18':'white'}\r\n                    sx = {{ \r\n                        borderRadius: 25, \r\n                        flex: 1, \r\n                        justifyContent: 'center', \r\n                        alignItems: 'center', \r\n                        cursor: 'pointer',\r\n                        }}\r\n                >\r\n                    <Text\r\n                    sx = {{ \r\n                        fontWeight: selected === item? 'heading': 'body',\r\n                        fontSize: 15,\r\n                        lineHeight: 20,\r\n                    }}\r\n                    color = {selected === item? 'chelseaCucumber': 'mistGray'}   \r\n                    >\r\n                        {item.label}\r\n                    </Text>\r\n                </Flex>\r\n            )}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Selection\r\n"]},"metadata":{},"sourceType":"module"}