{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kiet Nguyen\\\\Desktop\\\\corona-app\\\\components\\\\Selection.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Flex, Text } from \"theme-ui\";\n\nconst Selection = ({\n  items,\n  onClick,\n  selectedItem\n}) => {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(selectedItem !== null && selectedItem !== void 0 ? selectedItem : items[0]);\n  useEffect(() => {\n    if (onClick) onClick(selected.value);\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"white\",\n    mx: 15,\n    mb: 10,\n    p: \"5px\",\n    sx: {\n      position: \"sticky\",\n      height: 50,\n      borderRadius: 25,\n      boxShadow: \"rgb(0 0 0 / 5%) 1px 8px 8px 1px\"\n    },\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Flex, {\n      onClick: () => {\n        setSelected(item);\n      },\n      bg: selected === item ? \"chelseaCucumber18\" : \"white\",\n      sx: {\n        borderRadius: 25,\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        sx: {\n          fontWeight: selected === item ? \"700\" : \"body\",\n          fontSize: 15,\n          lineHeight: 20\n        },\n        color: selected === item ? \"chelseaCucumber\" : \"mistGray\",\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Selection;","map":{"version":3,"sources":["C:/Users/Kiet Nguyen/Desktop/corona-app/components/Selection.tsx"],"names":["React","useState","useEffect","Flex","Text","Selection","items","onClick","selectedItem","selected","setSelected","value","position","height","borderRadius","boxShadow","map","item","flex","justifyContent","alignItems","cursor","fontWeight","fontSize","lineHeight","label","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;;AAcA,MAAMC,SAA6B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAsC;AAC1E,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAYO,YAAZ,aAAYA,YAAZ,cAAYA,YAAZ,GAA4BF,KAAK,CAAC,CAAD,CAAjC,CAAxC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,OAAJ,EAAaA,OAAO,CAACE,QAAQ,CAACE,KAAV,CAAP;AACd,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAGA,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,CAAC,EAAC,KAJJ;AAKE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAE,QADR;AAEFC,MAAAA,MAAM,EAAE,EAFN;AAGFC,MAAAA,YAAY,EAAE,EAHZ;AAIFC,MAAAA,SAAS,EAAE;AAJT,KALN;AAAA,cAYGT,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAEE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,WAAW,CAACO,IAAD,CAAX;AACD,OAJH;AAKE,MAAA,EAAE,EAAER,QAAQ,KAAKQ,IAAb,GAAoB,mBAApB,GAA0C,OALhD;AAME,MAAA,EAAE,EAAE;AACFH,QAAAA,YAAY,EAAE,EADZ;AAEFI,QAAAA,IAAI,EAAE,CAFJ;AAGFC,QAAAA,cAAc,EAAE,QAHd;AAIFC,QAAAA,UAAU,EAAE,QAJV;AAKFC,QAAAA,MAAM,EAAE;AALN,OANN;AAAA,6BAcE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,UAAU,EAAEb,QAAQ,KAAKQ,IAAb,GAAoB,KAApB,GAA4B,MADtC;AAEFM,UAAAA,QAAQ,EAAE,EAFR;AAGFC,UAAAA,UAAU,EAAE;AAHV,SADN;AAME,QAAA,KAAK,EAAEf,QAAQ,KAAKQ,IAAb,GAAoB,iBAApB,GAAwC,UANjD;AAAA,kBAQGA,IAAI,CAACQ;AARR;AAAA;AAAA;AAAA;AAAA;AAdF,OACOR,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA/CD;;AAiDA,eAAerB,SAAf","sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport { Flex, Text } from \"theme-ui\";\r\n\r\ninterface ItemProps {\r\n  id: string | number;\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface SelectionProps {\r\n  items: ItemProps[];\r\n  onClick?: (value: string) => void;\r\n  selectedItem?: ItemProps;\r\n}\r\n\r\nconst Selection: FC<SelectionProps> = ({ items, onClick, selectedItem }) => {\r\n  const [selected, setSelected] = useState<ItemProps>(selectedItem ?? items[0]);\r\n  useEffect(() => {\r\n    if (onClick) onClick(selected.value);\r\n  }, [selected]);\r\n  return (\r\n    <Flex\r\n      bg=\"white\"\r\n      mx={15}\r\n      mb={10}\r\n      p=\"5px\"\r\n      sx={{\r\n        position: \"sticky\",\r\n        height: 50,\r\n        borderRadius: 25,\r\n        boxShadow: \"rgb(0 0 0 / 5%) 1px 8px 8px 1px\",\r\n      }}\r\n    >\r\n      {items.map((item) => (\r\n        <Flex\r\n          key={item.id}\r\n          onClick={() => {\r\n            setSelected(item);\r\n          }}\r\n          bg={selected === item ? \"chelseaCucumber18\" : \"white\"}\r\n          sx={{\r\n            borderRadius: 25,\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <Text\r\n            sx={{\r\n              fontWeight: selected === item ? \"700\" : \"body\",\r\n              fontSize: 15,\r\n              lineHeight: 20,\r\n            }}\r\n            color={selected === item ? \"chelseaCucumber\" : \"mistGray\"}\r\n          >\r\n            {item.label}\r\n          </Text>\r\n        </Flex>\r\n      ))}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n"]},"metadata":{},"sourceType":"module"}