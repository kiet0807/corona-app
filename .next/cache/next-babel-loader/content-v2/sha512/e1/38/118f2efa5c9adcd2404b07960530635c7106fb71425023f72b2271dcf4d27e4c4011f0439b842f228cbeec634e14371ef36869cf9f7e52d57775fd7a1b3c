{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kiet Nguyen\\\\Desktop\\\\corona-app\\\\components\\\\Selection.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Text } from 'theme-ui';\n\nvar Selection = function Selection(_ref) {\n  _s();\n\n  var items = _ref.items,\n      onClick = _ref.onClick,\n      selectedItem = _ref.selectedItem;\n\n  var _useState = useState(selectedItem !== null && selectedItem !== void 0 ? selectedItem : items[0]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    if (onClick) onClick(selected.value);\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"white\",\n    mx: 15,\n    mb: 20,\n    p: \"5px\",\n    sx: {\n      height: 50,\n      borderRadius: 25\n    },\n    children: items.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        onClick: function onClick() {\n          setSelected(item);\n        },\n        bg: selected === item ? 'chelseaCucumber18' : 'white',\n        sx: {\n          borderRadius: 25,\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          sx: {\n            fontWeight: selected === item ? 'heading' : 'body',\n            fontSize: 15,\n            lineHeight: 20\n          },\n          color: selected === item ? 'chelseaCucumber' : 'mistGray',\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Selection, \"wbd+7QmITUyQlJ7IGjbgrDMjsd4=\");\n\n_c = Selection;\nexport default Selection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selection\");","map":{"version":3,"sources":["C:/Users/Kiet Nguyen/Desktop/corona-app/components/Selection.tsx"],"names":["React","useState","useEffect","Flex","Text","Selection","items","onClick","selectedItem","selected","setSelected","value","height","borderRadius","map","item","flex","justifyContent","alignItems","cursor","fontWeight","fontSize","lineHeight","label","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,UAAzB;;AAcA,IAAMC,SAA8B,GAAG,SAAjCA,SAAiC,OAAoC;AAAA;;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAAA,kBACvCP,QAAQ,CAAcO,YAAd,aAAcA,YAAd,cAAcA,YAAd,GAA6BF,KAAK,CAAC,CAAD,CAAlC,CAD+B;AAAA,MAChEG,QADgE;AAAA,MACtDC,WADsD;;AAEvER,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,OAAJ,EACIA,OAAO,CAACE,QAAQ,CAACE,KAAV,CAAP;AACP,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAIA,sBACI,QAAC,IAAD;AACI,IAAA,EAAE,EAAG,OADT;AAEI,IAAA,EAAE,EAAI,EAFV;AAGI,IAAA,EAAE,EAAI,EAHV;AAII,IAAA,CAAC,EAAG,KAJR;AAKI,IAAA,EAAE,EAAI;AAAEG,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,YAAY,EAAE;AAA5B,KALV;AAAA,cAOKP,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,0BACX,QAAC,IAAD;AAEI,QAAA,OAAO,EAAI,mBAAM;AACbL,UAAAA,WAAW,CAACK,IAAD,CAAX;AACH,SAJL;AAKI,QAAA,EAAE,EAAIN,QAAQ,KAAKM,IAAb,GAAkB,mBAAlB,GAAsC,OALhD;AAMI,QAAA,EAAE,EAAI;AACFF,UAAAA,YAAY,EAAE,EADZ;AAEFG,UAAAA,IAAI,EAAE,CAFJ;AAGFC,UAAAA,cAAc,EAAE,QAHd;AAIFC,UAAAA,UAAU,EAAE,QAJV;AAKFC,UAAAA,MAAM,EAAE;AALN,SANV;AAAA,+BAcI,QAAC,IAAD;AACA,UAAA,EAAE,EAAI;AACFC,YAAAA,UAAU,EAAEX,QAAQ,KAAKM,IAAb,GAAmB,SAAnB,GAA8B,MADxC;AAEFM,YAAAA,QAAQ,EAAE,EAFR;AAGFC,YAAAA,UAAU,EAAE;AAHV,WADN;AAMA,UAAA,KAAK,EAAIb,QAAQ,KAAKM,IAAb,GAAmB,iBAAnB,GAAsC,UAN/C;AAAA,oBAQKA,IAAI,CAACQ;AARV;AAAA;AAAA;AAAA;AAAA;AAdJ,SACWR,IAAI,CAACS,EADhB;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAd;AAPL;AAAA;AAAA;AAAA;AAAA,WADJ;AAqCH,CA3CD;;GAAMnB,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, {FC, useState, useEffect} from 'react'\r\nimport {Flex, Text} from 'theme-ui'\r\n\r\ninterface ItemProps {\r\n    id: string | number,\r\n    label: string,\r\n    value: string\r\n}\r\n\r\ninterface SelectionProps {\r\n    items: ItemProps[]\r\n    onClick?: (value: string) => void,\r\n    selectedItem?: ItemProps\r\n}\r\n\r\nconst Selection: FC <SelectionProps> = ({items, onClick, selectedItem}) => {\r\n    const [selected, setSelected] = useState <ItemProps> (selectedItem?? items[0]);\r\n    useEffect(() => {\r\n        if (onClick)\r\n            onClick(selected.value)\r\n    }, [selected])\r\n    return (\r\n        <Flex\r\n            bg = 'white'\r\n            mx = {15}\r\n            mb = {20}\r\n            p = '5px'\r\n            sx = {{ height: 50, borderRadius: 25 }}\r\n        >\r\n            {items.map(item =>\r\n                <Flex\r\n                    key = {item.id}\r\n                    onClick = {() => {\r\n                        setSelected(item);  \r\n                    }}\r\n                    bg = {selected === item?'chelseaCucumber18':'white'}\r\n                    sx = {{ \r\n                        borderRadius: 25, \r\n                        flex: 1, \r\n                        justifyContent: 'center', \r\n                        alignItems: 'center', \r\n                        cursor: 'pointer',\r\n                        }}\r\n                >\r\n                    <Text\r\n                    sx = {{ \r\n                        fontWeight: selected === item? 'heading': 'body',\r\n                        fontSize: 15,\r\n                        lineHeight: 20,\r\n                    }}\r\n                    color = {selected === item? 'chelseaCucumber': 'mistGray'}   \r\n                    >\r\n                        {item.label}\r\n                    </Text>\r\n                </Flex>\r\n            )}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Selection\r\n"]},"metadata":{},"sourceType":"module"}